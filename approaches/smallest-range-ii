910. Smallest Range II
https://leetcode.com/problems/smallest-range-ii/

Given an array A of integers, for each integer A[i] we need to choose either x = -K or x = K, and add x to A[i] (only once).

After this process, we have some array B.

Return the smallest possible difference between the maximum value of B and the minimum value of B.

 

Example 1:

Input: A = [1], K = 0
Output: 0
Explanation: B = [1]
Example 2:

Input: A = [0,10], K = 2
Output: 6
Explanation: B = [2,8]
Example 3:

Input: A = [1,3,6], K = 3
Output: 3
Explanation: B = [4,6,3]


'''
1. Observations/constraints

Add or sub number from array for min(largest - smallest)
All cannot be +k or -k
All numbers are positives

2. List one problem you've done before that is similar to this problem

Can't think of any problem

3. What are 2 approaches that you think might work? Why did you pick these 2?

- get the median and choose +k/-k which brings digits closer to median
- Find all the possible combinations of forming B and return the one with min(largest - smallest)

4. Of the 2 approaches before, which one seems most promising? And why? Trade-offs Analysis

Approach 1 uses less space as we will be modifying in-place
Fast as we just have to do two pass - one to find median and other to update A

5. What are 5 tests cases you would use to verify your solution? Why did you pick these ones?

[0] 99 - corner cases
[1, 1, 1, 1, 1] 100 - all same case
[10, 20, 30, 40, 50] 10 - normal input
[1, 2, 3, 4, 5] 100 - input where k won't have effect
[1, 2, 3, 4, 8] 4 - normal input case

6. After considering the 2 candidate approaches, describe your proposed solution in 3 sentences or less. Please make sure your proposed solution passes the 5 tests cases you listed.

First pass - find low and high in the input array
answer is min of high - low or (high - k) - (low + k)

7. What is the run time of your proposed solution?

O(n) - One pass to find low and high

8. How much space does your solution use?

O(1) - Just need to store low and high values

9. Please write pseudocode for this solution. Something that you might share with an interviewer before coding.

Iterate A and find low, median and high
if low == high return high - low
return min((high - low), ((high - k) - (low + k)))

10. Run through an example

[0] 99 
low high
 0    0
 answer 0

[1, 1, 1, 1, 1] 100
low high
 1.  1
 answer 0

[10, 20, 30, 40, 50] 10 
low high
 10  50
 answer min(40, (40 - 20)) = 20

[1, 2, 3, 4, 5] 100 
low high
 1   5
 answer min(4, (-95 - 101)) = 4

[1, 2, 3, 4, 8] 4 
low high
 1   8
 answer min(7, (4 - 5)) = -1
'''
